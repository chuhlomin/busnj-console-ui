---
kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: amd64

steps:
  - name: build
    image: node:14.3.0-alpine3.11
    pull: if-not-exists
    commands:
      - npm install
      - npm run test
      - npm run build
    when:
      event:
        - push

  - name: cr
    image: plugins/docker
    pull: if-not-exists
    settings:
      registry: cr.chuhlomin.com
      repo: cr.chuhlomin.com/transit-server
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - ${DRONE_COMMIT}
        - latest
    when:
      event:
        - push
      branch:
        - master

  - name: deploy
    image: cr.chuhlomin.com/docker-run:latest
    pull: if-not-exists
    settings:
      server: delta.chuhlomin.com
      username: drone
      sudo: true
      docker_image: cr.chuhlomin.com/busnj-console-ui:${DRONE_COMMIT}
      docker_network: delta_default
      docker_network_alias: busnj-console-ui
      expose: "80"
    environment:
      SSH_KEY:
        from_secret: ssh_key
    when:
      event:
        - push
      branch:
        - master

trigger:
  branch:
    - master

image_pull_secrets:
  - dockerconfigjson
